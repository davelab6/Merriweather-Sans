<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttLibVersion="3.0">

  <fpgm>
    <assembly>
      PUSH[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSH[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSH[ ]	/* 1 value pushed */
      4
      RCVT[ ]	/* ReadCVT */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      11
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSH[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      11
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSH[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 3 values pushed */
      11 1 2
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      22
      NEG[ ]	/* Negate */
      JMPR[ ]	/* Jump */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      5 5
      RCVT[ ]	/* ReadCVT */
      PUSH[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      10
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSH[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSH[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      7 1
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSH[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      7 1
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSH[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 13
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      13 13
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      9
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 2 values pushed */
      10 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 2 values pushed */
      11 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      10
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSH[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSH[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 5
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 6 values pushed */
      14 14 1 0 12 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 2 values pushed */
      12 4
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      107
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      1 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      2 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      3 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      4 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      5 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      6 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      7 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      8 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      9 13
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      7
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 2 values pushed */
      0 5
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 6 values pushed */
      14 14 1 0 12 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 2 values pushed */
      12 4
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      107
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      1 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      2 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      3 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      4 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      5 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      6 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      7 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      8 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      9 24
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      14
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      18
      NEG[ ]	/* Negate */
      JMPR[ ]	/* Jump */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      35
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      35
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 5
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      37
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSH[ ]	/* 1 value pushed */
      1
      SZP2[ ]	/* SetZonePointer2 */
      IUP[0]	/* InterpolateUntPts */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      7
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 2 values pushed */
      0 5
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      37
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSH[ ]	/* 1 value pushed */
      1
      SZP2[ ]	/* SetZonePointer2 */
      IUP[0]	/* InterpolateUntPts */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 1 value pushed */
      3
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSH[ ]	/* 2 values pushed */
      40 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 3 values pushed */
      44 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      PUSH[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      9
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSH[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      47
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSH[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 1 value pushed */
      36
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      9 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      6
      RCVT[ ]	/* ReadCVT */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSH[ ]	/* 1 value pushed */
      128
      DIV[ ]	/* Divide */
      SUB[ ]	/* Subtract */
      PUSH[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      47
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSH[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 1 value pushed */
      36
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 1 value pushed */
      42
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 1 value pushed */
      42
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSH[ ]	/* 1 value pushed */
      43
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      9
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSH[ ]	/* 1 value pushed */
      65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 58
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 58
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 58
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 58
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 59
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 59
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 59
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 59
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 55
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 55
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 55
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 55
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 57
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 57
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 57
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 57
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 60
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 60
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 60
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 60
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 0 56
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      0 1 56
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 0 56
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 3 values pushed */
      1 1 56
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      48
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      48
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      52
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      48
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      53
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSH[ ]	/* 1 value pushed */
      48
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      54
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      49
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      49
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      52
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      49
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      53
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      49
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      54
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      50
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      50
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      52
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      50
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      53
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      50
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      54
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSH[ ]	/* 2 values pushed */
      36 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      52
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      53
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      54
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSH[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSH[ ]	/* 1 value pushed */
      1
      SZP2[ ]	/* SetZonePointer2 */
      IUP[0]	/* InterpolateUntPts */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

</ttFont>
